@mixin laptop-viewport {
  @media (max-width: $screen-xxl - 1) {
    @content;
  }
}

@mixin tablet-l-viewport {
  @media (max-width: $screen-xl - 1) {
    @content;
  }
}

@mixin tablet-viewport {
  @media (max-width: $screen-lg - 1) {
    @content;
  }
}

@mixin mobile-l-viewport {
  @media (max-width: $screen-md - 1) {
    @content;
  }
}

@mixin mobile-s-viewport {
  @media (max-width: $screen-sm - 1) {
    @content;
  }
}

@mixin section-padding-top {
  @include laptop-viewport {
    padding-top: 60px;
  }

  @include mobile-l-viewport {
    padding-top: 40px;
  }
}

@mixin section-padding-bottom {
  @include laptop-viewport {
    padding-bottom: 60px;
  }

  @include mobile-l-viewport {
    padding-bottom: 40px;
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  display: block;
  width: 100%;

  &::before {
    display: block;
    float: left;
    width: 100%;
    padding-top: calc(100% * #{$height} / #{$width});
    content: "";
  }

  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin flex-all-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin image-object-fit-cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@mixin image-absolute-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@mixin list-reset {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin btn-reset {
  width: auto;
  padding: 0;
  color: inherit;
  background-color: transparent;
  border: none;
  outline: none;
  cursor: pointer;
}

@mixin input-reset {
  background-color: #fff;
  border: none;
  border-radius: 0;
  appearance: none;

  &::-webkit-search-decoration,
  &::-webkit-search-cancel-button,
  &::-webkit-search-results-button,
  &::-webkit-search-results-decoration {
    display: none;
  }
}

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 0;
  clip: rect(0 0 0 0);
}

@mixin hover {
  @media (any-hover: hover) {
    &:hover {
      @content;
    }
  }
}

$browser-context: 16;

@function rem($value) {
  $rem-value: calc($value / $browser-context) + rem;

  @return $rem-value;
}

@function em($value) {
  $em-value: calc($value / $browser-context) + em;

  @return $em-value;
}

@function vw($value, $viewport: 1920) {
  $vw-context: ($viewport * 0.01) * 1px;

  @return calc(($value / $vw-context) * 1vw);
}
